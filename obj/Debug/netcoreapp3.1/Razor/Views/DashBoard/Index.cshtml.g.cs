#pragma checksum "C:\Users\Admin\source\repos\Platform-Services-Portal\Views\DashBoard\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4bbb3c024b879a324da815f970a76fbe71b84b9c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DashBoard_Index), @"mvc.1.0.view", @"/Views/DashBoard/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Admin\source\repos\Platform-Services-Portal\Views\_ViewImports.cshtml"
using Platform_Services_Portal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Admin\source\repos\Platform-Services-Portal\Views\_ViewImports.cshtml"
using Platform_Services_Portal.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4bbb3c024b879a324da815f970a76fbe71b84b9c", @"/Views/DashBoard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"77b46b7ef092fd3716f3a2323bff6a264eb1a13d", @"/Views/_ViewImports.cshtml")]
    public class Views_DashBoard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("d-block w-100 h-75"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/850494242/Leadspace-850494242.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("IaC"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Admin\source\repos\Platform-Services-Portal\Views\DashBoard\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<!--
=========================================================
Material Dashboard PRO - v2.1.2
=========================================================

Product Page: https://www.creative-tim.com/product/material-dashboard-pro
Copyright 2020 Creative Tim (https://www.creative-tim.com)
Coded by Creative Tim

=========================================================
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. -->
<!DOCTYPE html>
<html lang=""en"">

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4bbb3c024b879a324da815f970a76fbe71b84b9c5621", async() => {
                WriteLiteral(@"
    <meta charset=""utf-8"" />
    <link rel=""apple-touch-icon"" sizes=""76x76"" href=""../assets/img/apple-icon.png"">
    <link rel=""icon"" type=""image/png"" href=""../assets/img/favicon.png"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge,chrome=1"" />
    <title>
        Material Dashboard PRO by Creative Tim
    </title>
    <meta content='width=device-width, initial-scale=1.0, shrink-to-fit=no' name='viewport' />
    <!--     Fonts and icons     -->
    <link rel=""stylesheet"" type=""text/css"" href=""https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Roboto+Slab:400,700|Material+Icons"" />
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css"">
    <!-- CSS Files -->
    <link href=""../assets/css/material-dashboard.css?v=2.1.2"" rel=""stylesheet"" />
    <!-- CSS Just for demo purpose, don't include it in your project -->
    <link href=""../assets/demo/demo.css"" rel=""stylesheet"" />
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4bbb3c024b879a324da815f970a76fbe71b84b9c7601", async() => {
                WriteLiteral(@"
    <div class=""wrapper wrapper-full-page"">
        <div style=""background-color:black"">
            <div class=""container"">
                <div class=""row"">
                    <div class=""col-12  text-center"">
                        <div class=""col-12  text-center"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "4bbb3c024b879a324da815f970a76fbe71b84b9c8175", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style=\"background-color:lightgray\">\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"row\">\r\n");
#nullable restore
#line 54 "C:\Users\Admin\source\repos\Platform-Services-Portal\Views\DashBoard\Index.cshtml"
                         if (ViewBag.Costumer == "NB")
                        {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                            <div class=""col-md-4"">
                                <div class=""card card-chart"">
                                    <div class=""card-header card-header-warning"" data-header-animation=""true"">
                                        <div class=""ct-chart"" id=""websiteViewsChart""></div>
                                    </div>
                                    <div class=""card-body"">
                                        <div class=""card-actions"">
                                            <button class=""btn btn-warning btn-sm"">
                                                ");
#nullable restore
#line 64 "C:\Users\Admin\source\repos\Platform-Services-Portal\Views\DashBoard\Index.cshtml"
                                           Write(Html.ActionLink("Take me there", "NBVMware", "DashBoard", null, new { style = "color: white" }));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                            </button>
                                        </div>
                                        <h4 class=""card-title"">VMWare</h4>
                                        <p class=""card-category"">
                                            Capacity reports
                                        </p>
                                    </div>
                                    <div class=""card-footer"">
                                        <div class=""stats"">
                                            <i class=""material-icons"">access_time</i> updated daily
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-4"">
                                <div class=""card card-chart"">
                                    <div class=""card-header card-header-warning"" data-header-animation=""true"">
    ");
                WriteLiteral(@"                                    <div class=""ct-chart"" id=""dailySalesChart""></div>
                                    </div>
                                    <div class=""card-body"">
                                        <div class=""card-actions"">
                                            <button class=""btn btn-warning btn-sm"">
                                                ");
#nullable restore
#line 87 "C:\Users\Admin\source\repos\Platform-Services-Portal\Views\DashBoard\Index.cshtml"
                                           Write(Html.ActionLink("Take me there", "NBVMware", "DashBoard", null, new { style = "color: white" }));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                            </button>
                                        </div>
                                        <h4 class=""card-title"">VMWare</h4>
                                        <p class=""card-category"">
                                            Capacity reports
                                        </p>
                                    </div>
                                    <div class=""card-footer"">
                                        <div class=""stats"">
                                            <i class=""material-icons"">access_time</i> updated daily
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-4"">
                                <div class=""card card-chart"">
                                    <div class=""card-header card-header-warning"" data-header-animation=""true"">
    ");
                WriteLiteral(@"                                    <div class=""ct-chart"" id=""dailySalesChart1""></div>
                                    </div>
                                    <div class=""card-body"">
                                        <div class=""card-actions"">
                                            <button class=""btn btn-warning btn-sm"">
                                                ");
#nullable restore
#line 110 "C:\Users\Admin\source\repos\Platform-Services-Portal\Views\DashBoard\Index.cshtml"
                                           Write(Html.ActionLink("Take me there", "NBVMware", "DashBoard", null, new { style = "color: white" }));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                            </button>
                                        </div>
                                        <h4 class=""card-title"">VMWare</h4>
                                        <p class=""card-category"">
                                            Capacity reports
                                        </p>
                                    </div>
                                    <div class=""card-footer"">
                                        <div class=""stats"">
                                            <i class=""material-icons"">access_time</i> updated 4 minutes ago
                                        </div>
                                    </div>
                                </div>
                            </div>
");
#nullable restore
#line 125 "C:\Users\Admin\source\repos\Platform-Services-Portal\Views\DashBoard\Index.cshtml"
                        }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                    </div>
                </div>
            </div>
        </div>

    </div>
    </div>
    <!--   Core JS Files   -->
    <script src=""../assets/js/core/jquery.min.js""></script>
    <script src=""../assets/js/core/popper.min.js""></script>
    <script src=""../assets/js/core/bootstrap-material-design.min.js""></script>
    <script src=""../assets/js/plugins/perfect-scrollbar.jquery.min.js""></script>
    <!-- Plugin for the momentJs  -->
    <script src=""../assets/js/plugins/moment.min.js""></script>
    <!--  Plugin for Sweet Alert -->
    <script src=""../assets/js/plugins/sweetalert2.js""></script>
    <!-- Forms Validations Plugin -->
    <script src=""../assets/js/plugins/jquery.validate.min.js""></script>
    <!-- Plugin for the Wizard, full documentation here: https://github.com/VinceG/twitter-bootstrap-wizard -->
    <script src=""../assets/js/plugins/jquery.bootstrap-wizard.js""></script>
    <!--	Plugin for Select, full documentation here: http://silviomoreto.github.io/boo");
                WriteLiteral(@"tstrap-select -->
    <script src=""../assets/js/plugins/bootstrap-selectpicker.js""></script>
    <!--  Plugin for the DateTimePicker, full documentation here: https://eonasdan.github.io/bootstrap-datetimepicker/ -->
    <script src=""../assets/js/plugins/bootstrap-datetimepicker.min.js""></script>
    <!--  DataTables.net Plugin, full documentation here: https://datatables.net/  -->
    <script src=""../assets/js/plugins/jquery.dataTables.min.js""></script>
    <!--	Plugin for Tags, full documentation here: https://github.com/bootstrap-tagsinput/bootstrap-tagsinputs  -->
    <script src=""../assets/js/plugins/bootstrap-tagsinput.js""></script>
    <!-- Plugin for Fileupload, full documentation here: http://www.jasny.net/bootstrap/javascript/#fileinput -->
    <script src=""../assets/js/plugins/jasny-bootstrap.min.js""></script>
    <!--  Full Calendar Plugin, full documentation here: https://github.com/fullcalendar/fullcalendar    -->
    <script src=""../assets/js/plugins/fullcalendar.min.js""></script>
  ");
                WriteLiteral(@"  <!-- Vector Map plugin, full documentation here: http://jvectormap.com/documentation/ -->
    <script src=""../assets/js/plugins/jquery-jvectormap.js""></script>
    <!--  Plugin for the Sliders, full documentation here: http://refreshless.com/nouislider/ -->
    <script src=""../assets/js/plugins/nouislider.min.js""></script>
    <!-- Include a polyfill for ES6 Promises (optional) for IE11, UC Browser and Android browser support SweetAlert -->
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.js""></script>
    <!-- Library for adding dinamically elements -->
    <script src=""../assets/js/plugins/arrive.min.js""></script>
    <!--  Google Maps Plugin    -->
    <script src=""https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE""></script>
    <!-- Chartist JS -->
    <script src=""../assets/js/plugins/chartist.min.js""></script>
    <!--  Notifications Plugin    -->
    <script src=""../assets/js/plugins/bootstrap-notify.js""></script>
    <!-- Control Center for Material Da");
                WriteLiteral(@"shboard: parallax effects, scripts for the example pages etc -->
    <script src=""../assets/js/material-dashboard.js?v=2.1.2"" type=""text/javascript""></script>
    <!-- Material Dashboard DEMO methods, don't include it in your project! -->
    <script src=""../assets/demo/demo.js""></script>
    <script>
        $(document).ready(function () {
            $().ready(function () {
                $sidebar = $('.sidebar');

                $sidebar_img_container = $sidebar.find('.sidebar-background');

                $full_page = $('.full-page');

                $sidebar_responsive = $('body > .navbar-collapse');

                window_width = $(window).width();

                fixed_plugin_open = $('.sidebar .sidebar-wrapper .nav li.active a p').html();

                if (window_width > 767 && fixed_plugin_open == 'Dashboard') {
                    if ($('.fixed-plugin .dropdown').hasClass('show-dropdown')) {
                        $('.fixed-plugin .dropdown').addClass('open');
       ");
                WriteLiteral(@"             }

                }

                $('.fixed-plugin a').click(function (event) {
                    // Alex if we click on switch, stop propagation of the event, so the dropdown will not be hide, otherwise we set the  section active
                    if ($(this).hasClass('switch-trigger')) {
                        if (event.stopPropagation) {
                            event.stopPropagation();
                        } else if (window.event) {
                            window.event.cancelBubble = true;
                        }
                    }
                });

                $('.fixed-plugin .active-color span').click(function () {
                    $full_page_background = $('.full-page-background');

                    $(this).siblings().removeClass('active');
                    $(this).addClass('active');

                    var new_color = $(this).data('color');

                    if ($sidebar.length != 0) {
                        $sidebar.a");
                WriteLiteral(@"ttr('data-color', new_color);
                    }

                    if ($full_page.length != 0) {
                        $full_page.attr('filter-color', new_color);
                    }

                    if ($sidebar_responsive.length != 0) {
                        $sidebar_responsive.attr('data-color', new_color);
                    }
                });

                $('.fixed-plugin .background-color .badge').click(function () {
                    $(this).siblings().removeClass('active');
                    $(this).addClass('active');

                    var new_color = $(this).data('background-color');

                    if ($sidebar.length != 0) {
                        $sidebar.attr('data-background-color', new_color);
                    }
                });

                $('.fixed-plugin .img-holder').click(function () {
                    $full_page_background = $('.full-page-background');

                    $(this).parent('li').siblings().removeC");
                WriteLiteral(@"lass('active');
                    $(this).parent('li').addClass('active');


                    var new_image = $(this).find(""img"").attr('src');

                    if ($sidebar_img_container.length != 0 && $('.switch-sidebar-image input:checked').length != 0) {
                        $sidebar_img_container.fadeOut('fast', function () {
                            $sidebar_img_container.css('background-image', 'url(""' + new_image + '"")');
                            $sidebar_img_container.fadeIn('fast');
                        });
                    }

                    if ($full_page_background.length != 0 && $('.switch-sidebar-image input:checked').length != 0) {
                        var new_image_full_page = $('.fixed-plugin li.active .img-holder').find('img').data('src');

                        $full_page_background.fadeOut('fast', function () {
                            $full_page_background.css('background-image', 'url(""' + new_image_full_page + '"")');
                 ");
                WriteLiteral(@"           $full_page_background.fadeIn('fast');
                        });
                    }

                    if ($('.switch-sidebar-image input:checked').length == 0) {
                        var new_image = $('.fixed-plugin li.active .img-holder').find(""img"").attr('src');
                        var new_image_full_page = $('.fixed-plugin li.active .img-holder').find('img').data('src');

                        $sidebar_img_container.css('background-image', 'url(""' + new_image + '"")');
                        $full_page_background.css('background-image', 'url(""' + new_image_full_page + '"")');
                    }

                    if ($sidebar_responsive.length != 0) {
                        $sidebar_responsive.css('background-image', 'url(""' + new_image + '"")');
                    }
                });

                $('.switch-sidebar-image input').change(function () {
                    $full_page_background = $('.full-page-background');

                    $input ");
                WriteLiteral(@"= $(this);

                    if ($input.is(':checked')) {
                        if ($sidebar_img_container.length != 0) {
                            $sidebar_img_container.fadeIn('fast');
                            $sidebar.attr('data-image', '#');
                        }

                        if ($full_page_background.length != 0) {
                            $full_page_background.fadeIn('fast');
                            $full_page.attr('data-image', '#');
                        }

                        background_image = true;
                    } else {
                        if ($sidebar_img_container.length != 0) {
                            $sidebar.removeAttr('data-image');
                            $sidebar_img_container.fadeOut('fast');
                        }

                        if ($full_page_background.length != 0) {
                            $full_page.removeAttr('data-image', '#');
                            $full_page_background.fadeOut('f");
                WriteLiteral(@"ast');
                        }

                        background_image = false;
                    }
                });

                $('.switch-sidebar-mini input').change(function () {
                    $body = $('body');

                    $input = $(this);

                    if (md.misc.sidebar_mini_active == true) {
                        $('body').removeClass('sidebar-mini');
                        md.misc.sidebar_mini_active = false;

                        $('.sidebar .sidebar-wrapper, .main-panel').perfectScrollbar();

                    } else {

                        $('.sidebar .sidebar-wrapper, .main-panel').perfectScrollbar('destroy');

                        setTimeout(function () {
                            $('body').addClass('sidebar-mini');

                            md.misc.sidebar_mini_active = true;
                        }, 300);
                    }

                    // we simulate the window Resize so the charts will get updat");
                WriteLiteral(@"ed in realtime.
                    var simulateWindowResize = setInterval(function () {
                        window.dispatchEvent(new Event('resize'));
                    }, 180);

                    // we stop the simulation of Window Resize after the animations are completed
                    setTimeout(function () {
                        clearInterval(simulateWindowResize);
                    }, 1000);

                });
            });
        });</script>
    <script>
        $(document).ready(function () {
            // Javascript method's body can be found in assets/js/demos.js
            if ($('#dailySalesChart1').length != 0 || $('#dailySalesChart').length != 0 || $('#completedTasksChart').length != 0 || $('#websiteViewsChart').length != 0) {
                /* ----------==========     Daily Sales Chart initialization    ==========---------- */

                dataDailySalesChart1 = {
                    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],
               ");
                WriteLiteral(@"     series: [
                        [12, 17, 17, 17, 17, 18, 38]
                    ]
                };

                optionsDailySalesChart1 = {
                    lineSmooth: Chartist.Interpolation.cardinal({
                        tension: 0
                    }),
                    low: 0,
                    high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look
                    chartPadding: {
                        top: 0,
                        right: 0,
                        bottom: 0,
                        left: 0
                    },
                }

                var dailySalesChart1 = new Chartist.Line('#dailySalesChart1', dataDailySalesChart1, optionsDailySalesChart1);

                md.startAnimationForLineChart(dailySalesChart1);
                /* ----------==========     Daily Sales Chart initialization    ==========---------- */

                dataDailySalesChart = {
             ");
                WriteLiteral(@"       labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],
                    series: [
                        [12, 17, 7, 17, 23, 18, 38]
                    ]
                };

                optionsDailySalesChart = {
                    lineSmooth: Chartist.Interpolation.cardinal({
                        tension: 0
                    }),
                    low: 0,
                    high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look
                    chartPadding: {
                        top: 0,
                        right: 0,
                        bottom: 0,
                        left: 0
                    },
                }

                var dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);

                md.startAnimationForLineChart(dailySalesChart);



                /* ----------==========     Completed Tasks Chart initialization    ==========");
                WriteLiteral(@"---------- */

                dataCompletedTasksChart = {
                    labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],
                    series: [
                        [230, 750, 450, 300, 280, 240, 200, 190]
                    ]
                };

                optionsCompletedTasksChart = {
                    lineSmooth: Chartist.Interpolation.cardinal({
                        tension: 0
                    }),
                    low: 0,
                    high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look
                    chartPadding: {
                        top: 0,
                        right: 0,
                        bottom: 0,
                        left: 0
                    }
                }

                var completedTasksChart = new Chartist.Line('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);

                // start animation for th");
                WriteLiteral(@"e Completed Tasks Chart - Line Chart
                md.startAnimationForLineChart(completedTasksChart);


                /* ----------==========     Emails Subscription Chart initialization    ==========---------- */

                var dataWebsiteViewsChart = {
                    labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
                    series: [
                        [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]

                    ]
                };
                var optionsWebsiteViewsChart = {
                    axisX: {
                        showGrid: false
                    },
                    low: 0,
                    high: 1000,
                    chartPadding: {
                        top: 0,
                        right: 5,
                        bottom: 0,
                        left: 0
                    }
                };
                var responsiveOptions = [
                    ['screen an");
                WriteLiteral(@"d (max-width: 640px)', {
                        seriesBarDistance: 5,
                        axisX: {
                            labelInterpolationFnc: function (value) {
                                return value[0];
                            }
                        }
                    }]
                ];
                var websiteViewsChart = Chartist.Bar('#websiteViewsChart', dataWebsiteViewsChart, optionsWebsiteViewsChart, responsiveOptions);

                //start animation for the Emails Subscription Chart
                md.startAnimationForBarChart(websiteViewsChart);
            }

          
        });

    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n</html>\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
